
import pandas as pd
import smtplib
from email.message import EmailMessage



# Send the message via our own SMTP server.
server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
server.login("liebism@spprep.org", "ulxu xpbd syhi dodv")
# server.send_message(msg)
#server.quit()


#
# # creates SMTP session
# s = smtplib.SMTP('smtp.gmail.com', 587)
# # start TLS for security
# s.starttls()
# # Authentication
# s.login("liebism@spprep.org", "ulxu xpbd syhi dodv")
# # message to be sent
#
#

#
df = pd.read_csv("Imus.CSV", encoding='latin1')

df = df.rename(columns={"Gf_Date": "Gift_Date",
                            "Gf_CnBio_ID": "Constituent_ID",
                            "Gf_Amount": "Gift_Amount",
                            "Gf_Type": "Gift_Type",
                            "Gf_Fund": "Fund_Code",
                            "Gf_Fnds_1_01_Description": "Fund_Description",
                            "Gf_CnBio_Last_Name": "Last_Name",
                            "Gf_CnBio_Constit_Code": "Constituent_Code",
                            "Gf_Acknowledge": "Gift_Acknowledged",
                            "Gf_CnAdrPrf_Addrline1": "Address_Line_1",
                            "Gf_CnAdrPrf_Addrline2": "Address_Line_2",
                            "Gf_CnAdrPrf_Addrline3": "Address_Line_3",
                            "Gf_CnAdrPrf_City": "City",
                            "Gf_CnAdrPrf_State": "State",
                            "Gf_CnAdrPrf_ZIP": "Zip_Code",
                            "Gf_CnAdrSalAll_1_01_Salutation": "Salutation_1",
                            "Gf_CnAdrSalAll_1_02_Salutation": "Salutation_2",
                            "Gf_CnAdrSalAll_1_01_Sal_Type": "Salutation_Type_1",
                            "Gf_CnAdrSalAll_1_02_Sal_Type": "Salutation_Type_2",
                            "Gf_Tr_1_01_Tribute": "Tribute_Type_1",
                            "Gf_Tr_1_01_Tribute_Description": "Tribute_1",
                            "Gf_Tr_1_02_Tribute": "Tribute_Type_2",
                            "Gf_Tr_1_02_Tribute_Description": "Tribute_2"})

# extract Gomez addressee and salutation
mask_addressee = df['Salutation_Type_1'] == "Gomez Addressee"
df.loc[mask_addressee, 'Addressee'] = df['Salutation_1']

mask_addressee = df['Salutation_Type_2'] == "Gomez Addressee"
df.loc[mask_addressee, 'Addressee'] = df['Salutation_2']

mask_addressee = df['Salutation_Type_1'] == "Gomez Salutation"
df.loc[mask_addressee, 'Salutation'] = df['Salutation_1']

mask_addressee = df['Salutation_Type_2'] == "Gomez Salutation"
df.loc[mask_addressee, 'Salutation'] = df['Salutation_2']

# clean up
df = df[['Gift_Date', 'Gift_Type', 'Constituent_ID',
         'Last_Name', 'Constituent_Code',
         'Salutation', 'Addressee', 'Gift_Acknowledged',
         'Gift_Amount', 'Tribute_Type_1', 'Tribute_1',
         'Tribute_Type_2', 'Tribute_2', 'Address_Line_1',
         'Address_Line_2', 'Address_Line_3', 'City',
         'State', 'Zip_Code']]

df['Gift_Date'] = pd.to_datetime(df['Gift_Date'])

df = df.sort_values(by=['Gift_Date'])

print([df['Gift_Date']])


#
#
mask = df["Gift_Date"] > '2023-01-01'
df = df[mask]

df['Address_Line_Total'] =df['Address_Line_1']
mask = df['Address_Line_2'].notna()

df.loc[mask, 'Address_Line_Total'] = df['Address_Line_Total'] + ", " + df['Address_Line_2']


df["City_State_Zip"] = df['City'] + ", " + df['State'] + " " +df['Zip_Code']

# remove tributes na
mask = df['Tribute_1'].isna()
df = df[~mask]

mask = df['Tribute_Type_1'] == "in memory of"
df = df[mask]



mask = df["Gift_Date"] > '2023-09-01'
temp = df[mask]
tributes = list(temp['Tribute_1'].unique())
# print(*tributes, sep="\n")
#print(len(tributes))
#
#
#
for tribute in tributes:

    msg = EmailMessage()
    msg['From'] = "liebism@spprep.org"
    msg['To'] = "mzliebis@gmail.com"

    mask = df['Tribute_1'] == tribute
    df_temp = df[mask]

    holding = f"Recents Gifts in memory of {tribute}"

    msg['Subject'] = holding
    holding = f"Recents Gifts in memory of {tribute}\n\n\n"
    for index, row in df_temp.iterrows():
        temp = f"{row['Addressee']}\n{row['Address_Line_Total']}\n{row['City_State_Zip']}\ndate: {row['Gift_Date'].strftime('%m/%d/%Y')}\n\n\n"
        holding = holding + temp

    msg.set_content(holding)

    print(holding)


    # sending the mail
    server.send_message(msg)


# terminating the session
server.quit()

